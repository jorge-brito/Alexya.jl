function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    isdefined(Alexya, Symbol("#@add")) && precompile(Tuple{Alexya.var"#@add", LineNumberNode, Module, Int})
    isdefined(Alexya, Symbol("#@columnhg")) && precompile(Tuple{Alexya.var"#@columnhg", LineNumberNode, Module})
    isdefined(Alexya, Symbol("#@grid")) && precompile(Tuple{Alexya.var"#@grid", LineNumberNode, Module, Int, Int})
    isdefined(Alexya, Symbol("#@hexpand")) && precompile(Tuple{Alexya.var"#@hexpand", LineNumberNode, Module})
    isdefined(Alexya, Symbol("#@label_str")) && precompile(Tuple{Alexya.var"#@label_str", LineNumberNode, Module, Int})
    isdefined(Alexya, Symbol("#@margin")) && precompile(Tuple{Alexya.var"#@margin", LineNumberNode, Module, Int})
    isdefined(Alexya, Symbol("#@rowhg")) && precompile(Tuple{Alexya.var"#@rowhg", LineNumberNode, Module})
    isdefined(Alexya, Symbol("#@vexpand")) && precompile(Tuple{Alexya.var"#@vexpand", LineNumberNode, Module})
    isdefined(Alexya, Symbol("#Grid##kw")) && precompile(Tuple{Alexya.var"#Grid##kw", NamedTuple{(:column_homogeneous, :row_homogeneous), Tuple{Bool, Bool}}, typeof(Alexya.Grid), Array{Gtk.GtkButtonLeaf, 2}})
    isdefined(Alexya, Symbol("#Grid##kw")) && precompile(Tuple{Alexya.var"#Grid##kw", NamedTuple{(:column_homogeneous, :row_homogeneous), Tuple{Bool, Bool}}, typeof(Alexya.Grid), Array{Union{Char, String, Gtk.GtkWidget, Alexya.Span{T, N} where N where T}, 2}})
    isdefined(Alexya, Symbol("#Grid##kw")) && precompile(Tuple{Alexya.var"#Grid##kw", NamedTuple{(:column_homogeneous, :row_homogeneous), Tuple{Bool, Bool}}, typeof(Alexya.Grid), typeof(identity)})
    isdefined(Alexya, Symbol("#Grid##kw")) && precompile(Tuple{Alexya.var"#Grid##kw", NamedTuple{(:row_homogeneous, :column_homogeneous), Tuple{Bool, Bool}}, typeof(Alexya.Grid), Array{Union{Char, String, Gtk.GtkWidget, Alexya.Span{T, N} where N where T}, 2}})
    isdefined(Alexya, Symbol("#Slider##kw")) && precompile(Tuple{Alexya.var"#Slider##kw", NamedTuple{(:hexpand,), Tuple{Bool}}, typeof(Alexya.Slider), Base.UnitRange{Int64}})
    isdefined(Alexya, Symbol("#Slider##kw")) && precompile(Tuple{Alexya.var"#Slider##kw", NamedTuple{(:vexpand, :hexpand, :margin), Tuple{Bool, Bool, Base.Dict{Symbol, Real}}}, typeof(Alexya.Slider), Base.UnitRange{Int64}})
    isdefined(Alexya, Symbol("#Window##kw")) && precompile(Tuple{Alexya.var"#Window##kw", NamedTuple{(:title,), Tuple{String}}, typeof(Alexya.Window), Gtk.GtkCanvas, Int64, Int64})
    isdefined(Alexya, Symbol("#Window##kw")) && precompile(Tuple{Alexya.var"#Window##kw", NamedTuple{(:title,), Tuple{String}}, typeof(Alexya.Window), Int64, Int64})
    isdefined(Alexya, Symbol("#createCanvas##kw")) && precompile(Tuple{Alexya.var"#createCanvas##kw", NamedTuple{(:title,), Tuple{String}}, typeof(Alexya.createCanvas), Int64, Int64, Type{Alexya.Panels{:h, 120}}})
    isdefined(Alexya, Symbol("#createCanvas##kw")) && precompile(Tuple{Alexya.var"#createCanvas##kw", NamedTuple{(:title,), Tuple{String}}, typeof(Alexya.createCanvas), Int64, Int64, Type{Alexya.Panels{:v, 80}}})
    isdefined(Alexya, Symbol("#createCanvas##kw")) && precompile(Tuple{Alexya.var"#createCanvas##kw", NamedTuple{(:title,), Tuple{String}}, typeof(Alexya.createCanvas), Int64, Int64})
    isdefined(Alexya, Symbol("#set!##kw")) && precompile(Tuple{Alexya.var"#set!##kw", NamedTuple{(:position,), Tuple{Int32}}, typeof(Alexya.set!), Gtk.GtkPanedLeaf})
    precompile(Tuple{typeof(Alexya.:(→)), Gtk.GtkButtonLeaf, Int64})
    precompile(Tuple{typeof(Alexya.:(↓)), Gtk.GtkButtonLeaf, Int64})
    precompile(Tuple{typeof(Alexya.:(↦)), Int64, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Alexya.Button), String})
    precompile(Tuple{typeof(Alexya.Canvas)})
    precompile(Tuple{typeof(Alexya.Entry), String})
    precompile(Tuple{typeof(Alexya.Label), String})
    precompile(Tuple{typeof(Alexya.Label), Symbol})
    precompile(Tuple{typeof(Alexya.Paned), Symbol})
    precompile(Tuple{typeof(Alexya.Slider), Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkBoxLeaf, Gtk.GtkButtonLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkBoxLeaf, Gtk.GtkLabelLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkBoxLeaf, Gtk.GtkScaleLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkButtonLeaf, Alexya.Panels{:h, 120}, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkButtonLeaf, Alexya.Panels{:v, 80}, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkLabelLeaf, Alexya.Panels{:h, 120}, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkLabelLeaf, Alexya.Panels{:v, 80}, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkPanedLeaf, Gtk.GtkCanvas, Gtk.GtkBoxLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkScaleLeaf, Alexya.Panels{:h, 120}, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkScaleLeaf, Alexya.Panels{:v, 80}, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.add!), Gtk.GtkWindowLeaf, Gtk.GtkGridLeaf})
    precompile(Tuple{typeof(Alexya.createCanvas), Int64, Int64, Type{Alexya.Panels{:h, 120}}})
    precompile(Tuple{typeof(Alexya.createCanvas), Int64, Int64})
    precompile(Tuple{typeof(Alexya.get_current_layout)})
    precompile(Tuple{typeof(Alexya.get_current_window)})
    precompile(Tuple{typeof(Alexya.getprop), Gtk.GtkBoxLeaf, String, Type{Int64}})
    precompile(Tuple{typeof(Alexya.getprop), Gtk.GtkGridLeaf, String, Type{Bool}})
    precompile(Tuple{typeof(Alexya.getprop), Gtk.GtkWindowLeaf, Symbol, Type{String}})
    precompile(Tuple{typeof(Alexya.mapr), Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Alexya.mapr), Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Alexya.margin), Int64, Int64})
    precompile(Tuple{typeof(Alexya.off!), Gtk.GtkButtonLeaf, UInt64})
    precompile(Tuple{typeof(Alexya.on!), typeof(identity), Symbol, Gtk.GtkButtonLeaf})
    precompile(Tuple{typeof(Alexya.on!), typeof(identity), Symbol, Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.onclick!), typeof(identity), Int64})
    precompile(Tuple{typeof(Alexya.onclicked!), typeof(identity), Int64})
    precompile(Tuple{typeof(Alexya.onkeypress!), typeof(identity), Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.onkeypress!), typeof(identity)})
    precompile(Tuple{typeof(Alexya.onkeyrelease!), typeof(identity), Gtk.GtkWindowLeaf})
    precompile(Tuple{typeof(Alexya.onkeyrelease!), typeof(identity)})
    precompile(Tuple{typeof(Alexya.onmousemotion!), typeof(identity), Int64})
    precompile(Tuple{typeof(Alexya.point), Array{Int64, 1}})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkBoxLeaf, String, Int64})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkBoxLeaf, Symbol, Base.Dict{Symbol, Real}})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkBoxLeaf, Symbol, Bool})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkBoxLeaf, Symbol, Int64})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkScaleLeaf, String, Int64})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkScaleLeaf, Symbol, Base.Dict{Symbol, Real}})
    precompile(Tuple{typeof(Alexya.set!), Gtk.GtkScaleLeaf, Symbol, Bool})
    precompile(Tuple{typeof(Alexya.span), Alexya.Span{:cols, 2}})
    precompile(Tuple{typeof(Alexya.span), Alexya.Span{:cols, 3}})
    precompile(Tuple{typeof(Alexya.span), Alexya.Span{:rows, 2}})
    precompile(Tuple{typeof(Alexya.uselayout), Type{Alexya.Panels{:h, 120}}})
end